using System.Text.Json.Serialization;

namespace Stocki.Domain.Models.StockData;

public record StockOverview(
    [property: JsonPropertyName("Symbol")] string Symbol,
    [property: JsonPropertyName("AssetType")] string? AssetType,
    [property: JsonPropertyName("Name")] string? Name,
    [property: JsonPropertyName("Description")] string? Description,
    [property: JsonPropertyName("CIK")] string? CIK,
    [property: JsonPropertyName("Exchange")] string? Exchange,
    [property: JsonPropertyName("Currency")] string? Currency,
    [property: JsonPropertyName("Country")] string? Country,
    [property: JsonPropertyName("Sector")] string? Sector,
    [property: JsonPropertyName("Industry")] string? Industry,
    [property: JsonPropertyName("Address")] string? Address,
    [property: JsonPropertyName("OfficialSite")] string? OfficialSite,
    [property: JsonPropertyName("FiscalYearEnd")] string? FiscalYearEnd,
    [property: JsonPropertyName("LatestQuarter")] DateTime? LatestQuarter,
    [property: JsonPropertyName("MarketCapitalization")] long? MarketCapitalization,
    [property: JsonPropertyName("EBITDA")] long? EBITDA,
    [property: JsonPropertyName("PERatio")] decimal? PERatio,
    [property: JsonPropertyName("PEGRatio")] decimal? PEGRatio,
    [property: JsonPropertyName("BookValue")] decimal? BookValue,
    [property: JsonPropertyName("DividendPerShare")] decimal? DividendPerShare,
    [property: JsonPropertyName("DividendYield")] decimal? DividendYield,
    [property: JsonPropertyName("EPS")] decimal? EPS,
    [property: JsonPropertyName("RevenuePerShareTTM")] decimal? RevenuePerShareTTM,
    [property: JsonPropertyName("ProfitMargin")] decimal? ProfitMargin,
    [property: JsonPropertyName("OperatingMarginTTM")] decimal? OperatingMarginTTM,
    [property: JsonPropertyName("ReturnOnAssetsTTM")] decimal? ReturnOnAssetsTTM,
    [property: JsonPropertyName("ReturnOnEquityTTM")] decimal? ReturnOnEquityTTM,
    [property: JsonPropertyName("RevenueTTM")] long? RevenueTTM,
    [property: JsonPropertyName("GrossProfitTTM")] long? GrossProfitTTM,
    [property: JsonPropertyName("DilutedEPSTTM")] decimal? DilutedEPSTTM,
    [property: JsonPropertyName("QuarterlyEarningsGrowthYOY")] decimal? QuarterlyEarningsGrowthYOY,
    [property: JsonPropertyName("QuarterlyRevenueGrowthYOY")] decimal? QuarterlyRevenueGrowthYOY,
    [property: JsonPropertyName("AnalystTargetPrice")] decimal? AnalystTargetPrice,
    [property: JsonPropertyName("AnalystRatingStrongBuy")] int? AnalystRatingStrongBuy,
    [property: JsonPropertyName("AnalystRatingBuy")] int? AnalystRatingBuy,
    [property: JsonPropertyName("AnalystRatingHold")] int? AnalystRatingHold,
    [property: JsonPropertyName("AnalystRatingSell")] int? AnalystRatingSell,
    [property: JsonPropertyName("AnalystRatingStrongSell")] int? AnalystRatingStrongSell,
    [property: JsonPropertyName("TrailingPE")] decimal? TrailingPE,
    [property: JsonPropertyName("ForwardPE")] decimal? ForwardPE,
    [property: JsonPropertyName("PriceToSalesRatioTTM")] decimal? PriceToSalesRatioTTM,
    [property: JsonPropertyName("PriceToBookRatio")] decimal? PriceToBookRatio,
    [property: JsonPropertyName("EVToRevenue")] decimal? EVToRevenue,
    [property: JsonPropertyName("EVToEBITDA")] decimal? EVToEBITDA,
    [property: JsonPropertyName("Beta")] decimal? Beta,
    [property: JsonPropertyName("52WeekHigh")] decimal? FiftyTwoWeekHigh,
    [property: JsonPropertyName("52WeekLow")] decimal? FiftyTwoWeekLow,
    [property: JsonPropertyName("50DayMovingAverage")] decimal? FiftyDayMovingAverage,
    [property: JsonPropertyName("200DayMovingAverage")] decimal? TwoHundredDayMovingAverage,
    [property: JsonPropertyName("SharesOutstanding")] long? SharesOutstanding,
    [property: JsonPropertyName("DividendDate")] DateTime? DividendDate,
    [property: JsonPropertyName("ExDividendDate")] DateTime? ExDividendDate
);
